version: 2.1

jobs: # a collection of steps
  build:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Assemble JAR
          command: |
            ./gradlew clean test build
  build_and_deploy:
    machine: # run the steps with Docker
      image: ubuntu-2004:202101-01
    steps: # a collection of executable commands
      - run:
          name: Install java
          command: |
            sudo apt update
            sudo apt install default-jre
      - checkout # check out source code to working directory
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build docker
          command: |
            ./build-and-push.sh
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - add_ssh_keys:
          fingerprints:
            - ""#todo
      - run:
          name: Run new docker images in ec2
          command: |
            ssh ec2-user@ec2-3-87-205-141.compute-1.amazonaws.com \<<'ENDSSH'
              docker kill $(docker ps -q)
              docker rm $(docker ps -a -q)
              docker rmi $(docker images -q)
              docker run -d -p 80:8080 marynasydorenko/epam-training
            ENDSSH
workflows:
  version: 2
  build_and_deploy_workflow:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - build_and_deploy:
          filters:
            branches:
              only: master